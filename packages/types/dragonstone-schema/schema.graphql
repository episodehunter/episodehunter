# import Show from "show.graphql"
# import Episode from "episode.graphql"
# import Following from "following.graphql"
# import History from "history.graphql"
# import Title from "title.graphql"
# import User from "user.graphql"
# import UserInput from "user.graphql"
# import NextToWatch from "next-to-watch.graphql"
# import WatchedEpisodeInput from "watched-episode.graphql"
# import UnwatchedEpisodeInput from "watched-episode.graphql"

schema {
  query: RootQuery
  mutation: RootMutation
}

type RootQuery {
  show(id: Int!): Show
  popularShows: [Show!]!
  findShow(theTvDbId: Int!): Show
  season(showId: Int!, season: Int!): [Episode!]!
  following: [Following!]!
  titles: [Title!]!
  history(page: Int!): [History!]!
  me: User!
}

type RootMutation {
  checkInEpisode(episode: WatchedEpisodeInput!, apiKey: String, username: String): NextToWatch
  checkInEpisodes(episodes: [WatchedEpisodeInput!]!): NextToWatch
  removeCheckedInEpisode(episode: UnwatchedEpisodeInput!): NextToWatch
  followShow(showId: Int!): Boolean!
  unfollowShow(showId: Int!): Boolean!
  createUser(metadata: UserInput!): Boolean!
}
